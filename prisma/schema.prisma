generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum PricingStructure {
  hourly
  flatFee
  ppsqft
  percentage
  commission
  hybrid
  multiple
}

model Company {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  clients Int @default(0)
  pricingStructure PricingStructure
  users User[]
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  accounts Account[]
  sessions Session[]
  projects String[]
  company Company? @relation(fields: [companyId], references: [id])
  companyId String @db.ObjectId
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String?
  session_state String?
  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime
  user User @relation(fields: [userId], references: [id])
}

model Client {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  personalityType String
}

model Project {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type String?
  rooms Int
  bath Int
  squareFootage Int
  minBudget Int
  maxBudget Int
  location String
  pricingEstimate Int
  clientId String?
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}
