generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id               Int    @id @default(autoincrement())
  name             String
  clients          Int    @default(0)
  employees        Int    @default(0)
  pricingStructure String
  userId           Int
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  companyId     Int?
  accounts      Account[]
  sessions      Session[]
  projects      String[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Client {
  id              Int       @id @default(autoincrement())
  name            String
  email           String   @unique
  personalityType String?
  userId          Int
  Project         Project[]
}

model Project {
  id               Int       @id @default(autoincrement())
  name             String
  type             String?
  rooms            Int
  bath             Int
  pricingStructure String
  squareFootage    Int
  minBudget        Int
  maxBudget        Int
  address          String
  pricingEstimate  Int?
  clientId         Int?
  userId           Int
  estimatedEndDate String
  dateAdded        String
  client           Client?   @relation(fields: [clientId], references: [id])
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
